- id: bedroom-closet-opened-closed
  alias: "Bedroom Closet Opened/Closed"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - sensor.bedroom_closet_door
      to: 'open'
    - platform: state
      entity_id:
        - sensor.bedroom_closet_door
      to: 'closed'
  action:
    - data:
        entity_id:
          - switch.bedroom_closet_light
      service_template: "switch.turn_{% if (trigger.to_state.state == 'open') %}on{% elif (trigger.to_state.state == 'closed') %}off{% endif %}"

- id: bathroom-motion-detected
  alias: "Bathroom Motion Detected"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - sensor.master_bathroom_motion_detected
      to: 'yes'
    - platform: state
      entity_id:
        - sensor.guest_bathroom_motion_detected
      to: 'yes'
  action:
    - data_template:
        entity_id:
          - "switch.{{ trigger.entity_id.split('.')[1].split('_')[0] }}_bathroom_vanity_light"
          - "switch.{{ trigger.entity_id.split('.')[1].split('_')[0] }}_bathroom_light"
      service: switch.turn_on

- id: bathroom-motion-stopped
  alias: "Bathroom Motion Stopped"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - sensor.master_bathroom_motion_detected
      to: 'no'
      for: '00:05:00'
    - platform: state
      entity_id:
        - sensor.guest_bathroom_motion_detected
      to: 'no'
      for: '00:05:00'
  action:
    - data_template:
        entity_id:
          - "switch.{{ trigger.entity_id.split('.')[1].split('_')[0] }}_bathroom_vanity_light"
          - "switch.{{ trigger.entity_id.split('.')[1].split('_')[0] }}_bathroom_light"
      service: switch.turn_off

- id: bathroom-switch-off
  alias: "Bathroom Switch Off"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - switch.guest_bathroom_light
        - switch.guest_bathroom_vanity_light_switch
      to: 'off'
    - platform: state
      entity_id:
        - switch.master_bathroom_light
        - switch.master_bathroom_vanity_light_switch
      to: 'off'
  action:
    - data_template:
        entity_id:
          - "switch.{{ trigger.entity_id.split('.')[1].split('_')[0] }}_bathroom_light"
          - "switch.{{ trigger.entity_id.split('.')[1].split('_')[0] }}_bathroom_vanity_light"
      service: switch.turn_off

- id: google-type
  alias: "Google Type"
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ifttt_webhook_received
      event_data:
        action: call_service
  action:
     - service: script.tv_character_keypress
       data_template:
         character: '{{ trigger.event.data.text }}'
